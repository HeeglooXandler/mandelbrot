import base64, getpass, random
def get(x):
    try:
        return chr(x)
    except:
        return str(x)
def ints(x):
    try:
        return int(x)
    except:
        return str(x)
def setup():
    x = (0, 'e5mdoKqHlZqXqoWtk5iXgZmaq7ByoaWjm3FpZGtnq9I=', exec, getpass.getpass)
    return x
x = 'qtGZv4zTjYG0n0LdwuaEj3fUodW7qZ7AiuV+hLaykXy1jnsxZNy+5oR2kE3T0Kzm088246WZzpdNjMqId6Q8zJPWp36gwUxWkpmHfdrGgLrSqt+GgG6r76pFqMO7q7eDxubTLed6d3Tuzi/SqHeu3phIRG2WpSbGn9S9somaza1Dgrfatou7zOREq4g3cSlQ0Ker4rvK6IgtTmvG2NCoL4aBpKt7UlWXjbJRhIdZaeMr3KfEjZuut2XVcoAvfTLQrp2s6IsvS0Qm59ayS5SgV9zXmoFMdLLBQNlacd/urFnkhZq+MMFqee3Jwau2fFt8g0ZAitGUjOyr1Yjkq6zRtsQfUqJs36fpgJbPfnA0tLS5hYPxlzCU2tOccpKuMUZ7faZZx7XLL9bUounmkduMOk9nUYRM8NHQ4rXjzblETEWbqWiikdF+xeFxkYG+m0jFmtTVvrLH4oNji5fbinx5x4N0QkUUi7/LjWxdbUtwf4jg2G/fSunQ05eHurJFRkxkii4xyu68zpqZqoa+y7RJrnSbW4ubm2+HfYuEfnVVhZd+qN6jl3J8meOue27MqJp9oy6SOE8/Oy97hshyycVRroyJjMWYuVGngH1LdpeSkkMbjtwqjmVFn381hWWppYt5ZOi6n8trouGpcZfUSEcvi9glYp15RYxOnp9mUFfZ0cfD1H2VwG22q9LjYDlVD4rWL+en45jJe7BhyZ2olnQ0p158nBlbII80zsayeZqlvYuGTUDV4HtAcJncjYWdnHl/XDNXq5RbwajIqa7TebRijJqQk0GEW5ZwTnrouFGVHU5kgDIkLT8nyNlpoKaSgnZjny26fsOxjK6meT46T8rMzUQzwW92zZmIQo1AO4OgnreSvLTHR25JRYGZbHNprnODzcx1kKajzYAue+LbvM9vgKepTnFkKL6jwYyh6NG5y8fwvVftfbw1Ipmkecbl04uuVIe7yta8saeMmHeq1lpRxajiYOnP2J+wnJx8gH+r14eKf865Wzw0Z617crmS3tRl2L+laKsx0Eq4fHVvLSyKZ5KYu35yeo29zVrym7vmnGmPUNnn5tdqW39hMya1wbjL7MRinH+JpMWOeZWFtoO0ZbWZn8PZcos3UKhEl0W3otdy3Rg5XGd20bPc2MzEaFRrc8pps5tzNEZucXmMs3jUq6R2yio1Wm80Y5Clqcqaee9Qv9+ToWJ+hJ97QaXBq6OgjEdkIIwwyHh7t92PQ728jKbMtlhIwmuEVZfbqtZ6ne66099sjd1mXVCgOoKHXms0X79mYUjYx6251q2YnNeCoi83cXwzrKN3UPBnqKlcpKKDU0tvSn7WZEdP7ak+bpuW23GgZnNoP7ycbbJnRpHzM4RdXWXaQG+TLEc6ZTeSQrWNSdh97pZqgMe5maKEMszIu5zKhESkrrE0kWlYbVavRKlRWatyyuI0s3fK4t59ttSJxJs91JyFfqNnYTO3mVacgHeMi4JnySiDTDtDb2uqQeO9iOiYpHSGg2wy7orGg5KDOWpVJZLFeZVm1DiBgSnxgofFtHHosG3YZEVfk5c2SEBNL1OWPkdPY3Wh0+JwvZmElJOFdHKBdWiaMk/VULU9kLjKkLiSODh1N5t82oeL2mWe8263ySnAjHWHRUI/OYMNPJo2MLPDkH9+bWzlm7fU0tuj2KOg25EnjpGJYEtQW5I+d25QNHZ8gj5eNkSd387dtXrdwrPhf4eUjEgyhEpLQYA9VCySy9jKpsrUeN+/bXGSlWU6fTEj6miD79N5gYuJg213jnakfn3S5cyS2KpKxy2AesPNZWaGfEJcdo+d3OLh2p+jmbBsklm4h9jFp4lnjJadeKCDdZFCMICx2W2oz96SlHyMb3qQms/nlJdwNExyLaOQeaOMbnNYy62YfpyY4Ix2lIO4k8xoRW1ygV5ixKiAoIpMqcx8aWbJSqWMJL+ufebko9XckkeudMW2THtLUIR5L0MnLVDdosrjlbOQu/LaYnx8opl3fFNdgG8yd5Q7Kj6hy4mjhbeQloSM2Z+3XoqVMs3N76B8UNSohdCSjkfVraJ0jclDSZCRj+OHtL6OOlqeVIWdIC+aL3B3vXCxt+STdz25p7KRhOMsM59uhUeBhmvCqRRkV2Q3f8N8qvDpiJm/atCFhXy8tZ+gvrCmr8ttj5qtvarObrvPe3nQ6MG7gj+IYDYpLZHbiKGseZuEn8mcMfaDnJuzT+yjcXO4Ntaj7LeXNlt/O24WVyBpOLeQySxsZ3XQoLSJz8jRo5DdwOWJnW6krPGERrhffkGES2B+UV+Nl7DVoN+lkEgpocnOpeRwoExrTGNpXrs/pI3Fd1p+UIqTdjBRN3VYO4jEpcLNptJ1qpWTe56Zos2lkESUYm+xqMlTzWnMkneio+t60H+LyYp5mduKjZJni12OJH906YrOsjOPyaG/e407Z+HUbCCUu7x3vpR6w9eklHZeJ1s7NopkrZ7Q0jxu2YWswImyoYSQuZXjkM61lZSk0IW738yEmMZ6n0UyW4guZHepWuZ9doK4uPTllXZW1jKO0ZPpZbCYnDCBv2y4v2/PfrJnlpp+jiuGf6qjkYPBPrhQZdq1jcmJhNZjs1KHkpdbaIh3g6RymXQ0J0J0YlOoo7mW1IVkeKvavHLWgVNcY2CvRhxzZnVam+ZvoYtxSkPrumm4f6LQzHnlp1dEmENWkBiXJFs+uM/MzGxyeJCTi4TjfpGA1bp/b+yv6m95f8Pmua6cijiOLG6xqtu1Td+ZnoFfqMzgyXxt0HOrnXz2p5JDk8OyY2jR3I9rY15odkJxYkaEnYPsdaDcf6jKV9W1fIivTmh7dpBFeGpwKXxHU2mfvG6rMs/aqX6Ua4G45qfToehSpOYqXz03g8a1rl2Zp56gh6J+hDwxj53KfIjgyJ14dbWqdujUe6J644vpjuz1nYyzd6pa08+O3dnRonapSF1VV36O1djlZL2AaaWle1k1UnVtKKSE2XSGz8+en72Ngneoyp6Tpyl7jsmGtHt748uUg754jWnycG5sN3clhWdji2Hel52WoW+twpQol+e8W2K7P3honXyRsZibbd54oG1m0nGz5XOQYaez4ZDIaEVDkW300cBZrnI1ayypiJews2TUxLJ+43Bueox7e8TqVVSccSKeW3p3kSlVd6Yk1q6GvbTPg6Rjety4qczcYnNHxKycs46nve3HeH6enOubjnuxt5/Xn2akpw1Vjm1B1vXeqaN6ysOboDVZzYbehn2boo/a5kpJqIeFbHZ+l3uQZavngJragqJv5dOGN3DQsn+jb4S2isl6Qma5qdBuqeN9dLnnqlcqElKJlUbeqMF4z8rTcY2sNcuT7eG3doCYt6aV1Za+4c5vu65iktPna4yKhO+8eZOhxNTYotUmXj65a7Ck1Xh+49lrfquzpdPUyq+whajqnT9fcktXTCS0fGDD5nqfk3M1c7dsjH8+aWBJcHfBhISinNOVttafqLJ3youibqVWnLfNk3ZzfojPfHTVwmqf8neznpyAXtuHKXCN83G7f8ZHjovroJ1n2bPfeOW01X5p3diMaw5/YTuLNplDVpLygdfFkqzkudVYUuJ3qKSKoEJ/xm4xhomc0urb0OTHjEp7JOZobqSZlrd86M9SScKcjb51yeJzg4ugTagTP8W4VrDT65vQoZyWTrGZU0yQyLpjxsauzDVgSUtwd37gxr+nSF8='
run, s, show, input = setup()
ps = input('input: ')
p = [ord(i) for i in ps]
y = ''\
'''
q = list(base64.b64decode(s))
p = [q[i] - p[i] for i in range(len(p))]
p =  ints(''.join(get(i) for i in p))
'''
show(y)
print(p)
random.seed(p)
q = list(base64.b64decode(x))
q = [get(i-random.randint(0,128)) for i in q]
q = ''.join(q)
try:
    show(q)
except:
    print(q)